<!DOCTYPE html>
<html>
<head>
    <title>Authentication page</title>
</head>
<body>
<form method="post" action="{{ path('app_login_check') }}" id="assertion_form">
    <input type="hidden" value="" name="_assertion" id="_assertion">
</form>
<script>
    var publicKey = {{ publicKeyCredentialRequestOptions|json_encode|raw }};

    function arrayToBase64String(a) {
        return btoa(String.fromCharCode(...a));
    }

    publicKey.challenge = Uint8Array.from(window.atob(publicKey.challenge), c=>c.charCodeAt(0));
    publicKey.allowCredentials = publicKey.allowCredentials.map(function(data) {
        return {
            'type': data.type,
            'id': Uint8Array.from(atob(data.id), c=>c.charCodeAt(0)),
            'transport': data.transports
        };
    });

    navigator.credentials.get({publicKey})
        .then(data => {
            var publicKeyCredential = {
                id: data.id,
                type: data.type,
                rawId: arrayToBase64String(new Uint8Array(data.rawId)),
                response: {
                    authenticatorData: arrayToBase64String(new Uint8Array(data.response.authenticatorData)),
                    clientDataJSON: arrayToBase64String(new Uint8Array(data.response.clientDataJSON)),
                    signature: arrayToBase64String(new Uint8Array(data.response.signature)),
                    userHandle: data.response.userHandle ? arrayToBase64String(new Uint8Array(data.response.userHandle)) : null
                }
            };
            var assertion = document.getElementById('_assertion');
            assertion.value = btoa(JSON.stringify(publicKeyCredential));
            document.getElementById('assertion_form').submit();
        }, error => {
            console.log(error); // Example: timeout, interaction refused...
        });
</script>
</body>
</html>
