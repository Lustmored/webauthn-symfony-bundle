parameters:
    env(DATABASE_URL): ''

framework:
    test: ~
    secret: 'test'
    session:
        storage_id: 'session.storage.mock_file'
    fragments:       ~
    http_method_override: true
    router:
        resource: "%kernel.root_dir%/../config/routing.php"

services:
    _defaults:
        public: true

    httplug.client.mock:
        class: 'Http\Mock\Client'

    httplug.client.default: '@httplug.client.mock'

    Webauthn\Bundle\Tests\Functional\PublicKeyCredentialUserEntityRepository:
        autowire: true

    Webauthn\Bundle\Tests\Functional\PublicKeyCredentialSourceRepository:
        autowire: true

    Nyholm\Psr7\Factory\Psr17Factory: ~
    Symfony\Bridge\PsrHttpMessage\HttpMessageFactoryInterface:
        class: 'Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory'
        arguments:
            - '@Nyholm\Psr7\Factory\Psr17Factory'
            - '@Nyholm\Psr7\Factory\Psr17Factory'
            - '@Nyholm\Psr7\Factory\Psr17Factory'
            - '@Nyholm\Psr7\Factory\Psr17Factory'

    Webauthn\Bundle\Tests\Functional\UserProvider:
        autowire: true
    Webauthn\Bundle\Tests\Functional\UserRepository: ~
    Webauthn\Bundle\Tests\Functional\HomeController:
        autowire: true
        tags: ['controller.service_arguments']
    Webauthn\Bundle\Tests\Functional\SecurityController:
        autowire: true
        tags: ['controller.service_arguments']
    Webauthn\Bundle\Tests\Functional\AdminController:
        autowire: true
        tags: ['controller.service_arguments']

    Webauthn\Bundle\Tests\Functional\PublicKeyCredentialFakeUserEntityProvider:
        autowire: true
    Webauthn\Bundle\Tests\Functional\FailureHandler: ~
    Webauthn\Bundle\Tests\Functional\SuccessHandler: ~
    Webauthn\Bundle\Tests\Functional\CustomSessionStorage: ~

doctrine:
    dbal:
        driver: 'pdo_mysql'
        server_version: '5.7'
        charset: utf8mb4
        default_table_options:
            charset: utf8mb4
            collate: utf8mb4_unicode_ci

        url: '%env(resolve:DATABASE_URL)%'
    orm:
        auto_generate_proxy_classes: true
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        mappings:
            App:
                is_bundle: false
                type: annotation
                dir: '%kernel.project_dir%/'
                prefix: 'Webauthn\Bundle\Tests\Functional'
                alias: App


webauthn:
    credential_repository: 'Webauthn\Bundle\Tests\Functional\PublicKeyCredentialSourceRepository'
    user_repository: 'Webauthn\Bundle\Tests\Functional\PublicKeyCredentialUserEntityRepository'
    android_safetynet:
        max_age: 99999999999
    creation_profiles:
        default:
            public_key_credential_parameters:
                - !php/const Cose\Algorithms::COSE_ALGORITHM_EdDSA #Order is important. Preferred algorithms go first
                - !php/const Cose\Algorithms::COSE_ALGORITHM_ES256
                - !php/const Cose\Algorithms::COSE_ALGORITHM_ES256K
                - !php/const Cose\Algorithms::COSE_ALGORITHM_ES384
                - !php/const Cose\Algorithms::COSE_ALGORITHM_ES512
                - !php/const Cose\Algorithms::COSE_ALGORITHM_RS256
                - !php/const Cose\Algorithms::COSE_ALGORITHM_RS384
                - !php/const Cose\Algorithms::COSE_ALGORITHM_RS512
                - !php/const Cose\Algorithms::COSE_ALGORITHM_PS256
                - !php/const Cose\Algorithms::COSE_ALGORITHM_PS384
                - !php/const Cose\Algorithms::COSE_ALGORITHM_PS512
            rp:
                name: 'My other application'
                id: 'webauth.app'
    request_profiles:
        default:
            rp_id: 'localhost'
            challenge_length: 32
            timeout: 30000
            user_verification: !php/const Webauthn\AuthenticatorSelectionCriteria::USER_VERIFICATION_REQUIREMENT_REQUIRED
    transport_binding_profile:
        creation:
            default:
                profile_name: 'default'
                request_path: '/attestation/options'
                response_path: '/attestation/result'
                #host: 'test.com'
                session_parameter_name: '__WEBAUTHN_ATTESTATION_REQUEST__1'
        request:
            default:
                profile_name: 'default'
                request_path: '/assertion/options'
                response_path: '/assertion/result'
                #host: 'test.com'
                session_parameter_name: '__WEBAUTHN_ASSERTION_REQUEST__1'
    metadata_service:
        http_client: 'httplug.client.mock'
        request_factory: 'Nyholm\Psr7\Factory\Psr17Factory'
        services:
            fido_alliance:
                is_public: true
                service_uri: 'https://foo.com'
                additional_query_string_values:
                    token: '--TOKEN--'

security:
    providers:
        default:
            id: 'Webauthn\Bundle\Tests\Functional\UserProvider'

    firewalls:
        main:
            anonymous: ~
            webauthn_json:
                profile: 'default'
                request_options_storage: 'Webauthn\Bundle\Tests\Functional\CustomSessionStorage'
                success_handler: 'Webauthn\Bundle\Tests\Functional\SuccessHandler'
                failure_handler: 'Webauthn\Bundle\Tests\Functional\FailureHandler'
                http_message_factory: 'Symfony\Bridge\PsrHttpMessage\HttpMessageFactoryInterface'
                fake_user_entity_provider: 'Webauthn\Bundle\Tests\Functional\PublicKeyCredentialFakeUserEntityProvider'
            logout:
                path: /logout
                target: /

    access_control:
        - { path: ^/logout,  roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/login,  roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/admin,  roles: 'ROLE_ADMIN', requires_channel: https }
        - { path: ^/page,   roles: 'ROLE_USER', requires_channel: https }
        - { path: ^/,       roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
